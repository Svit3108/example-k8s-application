name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build frontend
        run: npm run build

      - name: Archive frontend artifact
        uses: actions/upload-artifact@v2
        with:
          name: frontend
          path: frontend/dist

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Download frontend artifact
        uses: actions/download-artifact@v2
        with:
          name: frontend
          path: frontend/dist

      - name: Deploy frontend to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-central-1'   
          SOURCE_DIR: 'frontend/dist'

  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "backend/"
          push: true

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Deploy backend using Ansible
        run: |
          ansible --version
          ansible-playbook -i hosts.ini deploy_backend.yml --private-key=./temp_key.pem
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}     
          



